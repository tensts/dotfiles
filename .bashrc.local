export HISTIGNORE=":task add*"
export MANPAGER="/bin/sh -c \"col -b | vim --not-a-term -c 'set ft=man ts=8 nomod nolist noma' -\""
export EDITOR=vim
export LESS="--RAW-CONTROL-CHARS"


alias usd2pln="wget -q -O- http://api.nbp.pl/api/exchangerates/rates/a/usd/ | cat -ve | grep -Po '\"mid\":([0-9]*[.]?[0-9]*)'"
alias euro2pln="wget -q -O- http://api.nbp.pl/api/exchangerates/rates/a/eur/ | cat -ve | grep -Po '\"mid\":([0-9]*[.]?[0-9]*)'"
alias onedrive="onedrive --monitor --confdir ~/.config/onedrive --resync"
alias mdread="readmd $1"
alias spotkill="pkill -9 spotify"
alias kpcli='kpcli --histfile /dev/null' 
alias lock="xscreensaver-command -lock"


readmd() {
    pandoc -f markdown -t html $1 | lynx -stdin
}

dockmonitor() {
#    xrandr --auto
    xrandr --output HDMI-1 --right-of eDP-1
    xrandr --output DP-2 --right-of eDP-1
#    xrandr --output DP-1 --right-of eDP-1
    feh --bg-scale $HOME/Pictures/wallpaper.jpg
}


#colorize commands
[[ -f ~/.config/less/termcap ]] && . ~/.config/less/termcap

#tmux by default
if [[ $TERM = "xterm" ]] || [[ $TERM = "xterm-256color" ]] || [[ $TERM = "st-256color" ]]; then
    tmux && exit 0;
fi

if [[ -e ~/.bashrc-functs ]]; then
    source ~/.bashrc-functs
fi

#setting up gpg
# uncomment if gpg should be use as ssh (above block about ssh-agent should be commented out
# to use this settings
#export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
export GPG_TTY=$(tty)

if test -f $HOME/.gpg-agent-info && \
    kill -0 `ps aux | grep gpg-agent` 2>/dev/null;
then
    eval `cat $HOME/.gpg-agent-info`
else
    eval `gpg-agent --homedir $HOME/.gnupg --daemon -s > $HOME/.gpg-agent-info`
fi

gpg-connect-agent updatestartuptty /bye


# ssh agent setup
ssh_agent_path="/run/user/$UID/S.ssh-agent"
if [[ "$(ps aux | grep ssh-agent | grep -v grep | wc -l)" -eq 0 ]];
    # agent doesnt exists
then
    if [[ -e $ssh_agent_path ]]; then
        #socket exists, but ssh-agent not, so we rm socket
        rm -f $ssh_agent_path;
    fi
    #start ssh-agent
    eval $(ssh-agent -s -a $ssh_agent_path -t 600); #-t 600[s]
else
    # agent exists so export socket
    export SSH_AUTH_SOCK=$ssh_agent_path;
fi


if [ -f "$HOME/Git/bash-git-prompt/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=1
    #disable autopull from remote (fail2ban avoid)
    GIT_PROMPT_FETCH_REMOTE_STATUS=0
    source $HOME/Git/bash-git-prompt/gitprompt.sh
fi
